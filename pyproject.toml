[build-system]
requires = [
    "PyYAML",
    "cibuildwheel",
    "cmake",
    "ninja",
    "numpy",
    "pip",
    "pybind11",
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "[%(filename)s:%(funcName)s:%(lineno)d] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.cibuildwheel]
before-build = "pip install -r build-requirements.txt -r requirements.txt -v"
manylinux-x86_64-image = "dockcross/manylinux_2_28-x64"
# HOLY FUCK
# https://github.com/pypa/pip/issues/5229#issuecomment-387301397
build-verbosity = "3"

[tool.cibuildwheel.linux]
before-all = [
    "yum install -y kmod kernel-devel",
    "wget -q https://developer.download.nvidia.com/compute/cuda/11.7.1/local_installers/cuda_11.7.1_515.65.01_linux.run",
    "sh cuda_11.7.1_515.65.01_linux.run --silent --override --kernel-source-path=/usr/src/kernels/4.18.0-425.13.1.el8_7.x86_64/",
    "mkdir -p /usr/lib/x86_64-linux-gnu",
    "ln -s /usr/lib64/libcuda.so /usr/lib/x86_64-linux-gnu/libcuda.so",
    ""
]
environment = { PIP_NO_BUILD_ISOLATION = "false", LD_LIBRARY_PATH = "/usr/local/cuda/lib64:$LD_LIBRARY_PATH" }
archs = ["x86_64"]
build = "cp310-manylinux_x86_64 cp311-manylinux_x86_64"

[tool.cibuildwheel.macos]
build = "cp310-* cp311-*"
archs = [ "arm64", "x86_64" ]
environment = { PIP_NO_BUILD_ISOLATION = "false" }
repair-wheel-command = "delocate-wheel --ignore-missing-dependencies --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"