name: Build

on:
  workflow_dispatch:

jobs:

  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-11, windows-2020 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build wheel
        if: ${{ matrix.os != 'windows-2020' }}
        shell: bash
        run: |
          pip install -r build-requirements.txt
          export PARALLEL_LEVEL=2
          cibuildwheel

      - uses: pypa/cibuildwheel@v2.13.0
        if: ${{ matrix.os == 'windows-2020' }}

      - name: Copy wheel
        shell: bash
        run: |
          mkdir -p ${{ github.sha }}
          mv wheelhouse/nelli*.whl ${{ github.sha }}/

      - name: Upload an artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'workflow_dispatch'
        with:
          if-no-files-found: error
          name: build_artifact
          path: ${{ github.sha }}

  upload-tarballs:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    needs: [ build ]

    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_artifact
          path: ${{ github.sha }}

      - name: Set up a release page
        id: setup_release
        run: |
          NELLI_VERSION=$(python setup.py --version)
          tag_name="$NELLI_VERSION"
          release_title="nelli $NELLI_VERSION"
          echo "nelli $NELLI_VERSION created at $(date)" > body.md
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "release_title=${release_title}" >> $GITHUB_OUTPUT

      - name: Upload tarballs
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.sha }}/*.whl"
          bodyFile: body.md
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.setup_release.outputs.tag_name }}"
          name: "${{ steps.setup_release.outputs.release_title }}"
          allowUpdates: true
          replacesArtifacts: true
